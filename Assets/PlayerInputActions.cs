//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.4.4
//     from Assets/PlayerInputActions.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerInputActions : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerInputActions()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerInputActions"",
    ""maps"": [
        {
            ""name"": ""Player"",
            ""id"": ""8913c8df-6ad2-4538-99db-bfa88d31bdd0"",
            ""actions"": [
                {
                    ""name"": ""OnJump"",
                    ""type"": ""Button"",
                    ""id"": ""1c7516aa-6eb9-48e6-985b-3d8432c8967a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""OnMoveRight"",
                    ""type"": ""Button"",
                    ""id"": ""0bc9528b-de02-406a-9ec9-bc444b6a31ae"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""OnMoveLeft"",
                    ""type"": ""Button"",
                    ""id"": ""80f7b11a-fa36-4390-8924-135733cf3182"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Pause"",
                    ""type"": ""Button"",
                    ""id"": ""2b4c81f7-1dc4-45b2-92ec-7f468501dca9"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Interact"",
                    ""type"": ""Button"",
                    ""id"": ""776f184c-2959-4175-a407-28863efb18b0"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""OnResizing"",
                    ""type"": ""Button"",
                    ""id"": ""324b56a5-3730-4d32-8fb2-fb3e5ec59191"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""09a837aa-1739-4a3a-8de8-c161899e8081"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""OnJump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""53855ce4-8713-495f-bd72-a5fd2a2f0a1f"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""OnMoveRight"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4e0bfd96-cbac-4b0a-9904-e613d33a878b"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""OnMoveLeft"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3fe4b92e-f915-4656-a859-901e6350cb2c"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Pause"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ad689ea6-13f8-427b-971f-f0af74945162"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ef4d3144-68e3-43b3-9858-7c7dc8a32d63"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""OnResizing"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Player
        m_Player = asset.FindActionMap("Player", throwIfNotFound: true);
        m_Player_OnJump = m_Player.FindAction("OnJump", throwIfNotFound: true);
        m_Player_OnMoveRight = m_Player.FindAction("OnMoveRight", throwIfNotFound: true);
        m_Player_OnMoveLeft = m_Player.FindAction("OnMoveLeft", throwIfNotFound: true);
        m_Player_Pause = m_Player.FindAction("Pause", throwIfNotFound: true);
        m_Player_Interact = m_Player.FindAction("Interact", throwIfNotFound: true);
        m_Player_OnResizing = m_Player.FindAction("OnResizing", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Player
    private readonly InputActionMap m_Player;
    private IPlayerActions m_PlayerActionsCallbackInterface;
    private readonly InputAction m_Player_OnJump;
    private readonly InputAction m_Player_OnMoveRight;
    private readonly InputAction m_Player_OnMoveLeft;
    private readonly InputAction m_Player_Pause;
    private readonly InputAction m_Player_Interact;
    private readonly InputAction m_Player_OnResizing;
    public struct PlayerActions
    {
        private @PlayerInputActions m_Wrapper;
        public PlayerActions(@PlayerInputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @OnJump => m_Wrapper.m_Player_OnJump;
        public InputAction @OnMoveRight => m_Wrapper.m_Player_OnMoveRight;
        public InputAction @OnMoveLeft => m_Wrapper.m_Player_OnMoveLeft;
        public InputAction @Pause => m_Wrapper.m_Player_Pause;
        public InputAction @Interact => m_Wrapper.m_Player_Interact;
        public InputAction @OnResizing => m_Wrapper.m_Player_OnResizing;
        public InputActionMap Get() { return m_Wrapper.m_Player; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerActions set) { return set.Get(); }
        public void SetCallbacks(IPlayerActions instance)
        {
            if (m_Wrapper.m_PlayerActionsCallbackInterface != null)
            {
                @OnJump.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnOnJump;
                @OnJump.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnOnJump;
                @OnJump.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnOnJump;
                @OnMoveRight.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnOnMoveRight;
                @OnMoveRight.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnOnMoveRight;
                @OnMoveRight.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnOnMoveRight;
                @OnMoveLeft.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnOnMoveLeft;
                @OnMoveLeft.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnOnMoveLeft;
                @OnMoveLeft.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnOnMoveLeft;
                @Pause.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnPause;
                @Pause.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnPause;
                @Pause.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnPause;
                @Interact.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnInteract;
                @Interact.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnInteract;
                @Interact.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnInteract;
                @OnResizing.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnOnResizing;
                @OnResizing.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnOnResizing;
                @OnResizing.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnOnResizing;
            }
            m_Wrapper.m_PlayerActionsCallbackInterface = instance;
            if (instance != null)
            {
                @OnJump.started += instance.OnOnJump;
                @OnJump.performed += instance.OnOnJump;
                @OnJump.canceled += instance.OnOnJump;
                @OnMoveRight.started += instance.OnOnMoveRight;
                @OnMoveRight.performed += instance.OnOnMoveRight;
                @OnMoveRight.canceled += instance.OnOnMoveRight;
                @OnMoveLeft.started += instance.OnOnMoveLeft;
                @OnMoveLeft.performed += instance.OnOnMoveLeft;
                @OnMoveLeft.canceled += instance.OnOnMoveLeft;
                @Pause.started += instance.OnPause;
                @Pause.performed += instance.OnPause;
                @Pause.canceled += instance.OnPause;
                @Interact.started += instance.OnInteract;
                @Interact.performed += instance.OnInteract;
                @Interact.canceled += instance.OnInteract;
                @OnResizing.started += instance.OnOnResizing;
                @OnResizing.performed += instance.OnOnResizing;
                @OnResizing.canceled += instance.OnOnResizing;
            }
        }
    }
    public PlayerActions @Player => new PlayerActions(this);
    public interface IPlayerActions
    {
        void OnOnJump(InputAction.CallbackContext context);
        void OnOnMoveRight(InputAction.CallbackContext context);
        void OnOnMoveLeft(InputAction.CallbackContext context);
        void OnPause(InputAction.CallbackContext context);
        void OnInteract(InputAction.CallbackContext context);
        void OnOnResizing(InputAction.CallbackContext context);
    }
}
